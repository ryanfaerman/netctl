extend type Query {
  boards: [Board!]!
  board(id: ID!): Board!
}

extend type Mutation {
  createBoard(input: BoardInput!): Board!

  boardLock(id: ID!): Board!
  boardUnlock(id: ID!): Board!
  boardUpdate(id: ID!, input: BoardInput!): Board!
  boardDelete(id: ID!, input: BoardDeleteInput): Board!

}

extend type Subscription {
  board(id: ID!): Board!
}

type Board {
  id: ID!

  createdAt: Date!
  updatedAt: Date!
  deletedAt: Date

  title: String!
  maxVotes: Int!
  timer: Int!
  locked: Boolean!
  openForVotes: Boolean!
  openForNotes: Boolean!

  notes: [Note!]!
}

input BoardInput {
  title: String
  timer: Int
  maxVotes: Int
  openForVotes: Boolean
  openForNotes: Boolean
}

input BoardDeleteInput {
  notes: Boolean
  softDelete: Boolean
}

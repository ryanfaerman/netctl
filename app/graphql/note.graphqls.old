
extend type Query {
  note(id: ID!): Note!
}

extend type Mutation {
  createNote(boardID: ID!, note: NoteInput!): Note

  noteUpvote(id: ID!): Note!
  noteDownvote(id: ID!): Note!
  noteDelete(id: ID!): Note!
  noteChangeCategory(id: ID!, category: NoteCategoryInput!): Note!
  noteMerge(left: NoteMergeInput!, right: NoteMergeInput!): Note!
}

# extend type Subscription {
#   # note(boardID: ID!): Note!
# }

type Note {
  id: ID!
  createdAt: String!
  updatedAt: String!
  deletedAt: String

  body: String!
  category: Category!
  board: Board!
}

input NoteInput {
  body: String!
  category: ID!
}

input NoteCategoryInput {
  id: ID!
}

input NoteMergeInput {
  id: ID!
}

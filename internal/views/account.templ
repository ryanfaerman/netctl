package views

import "github.com/ryanfaerman/netctl/internal/models"
import "github.com/ryanfaerman/netctl/web/named"

import "strings"

type Account struct {
	Account       *models.Account
	Clubs         []*models.Membership
	Organizations []*models.Membership
	Memberships   []*models.Membership
	FlashTitle    string
	FlashMessage  string
}

func (v Account) Nav() Menu {
	return Menu{
		{Value: "Profile", URL: named.URLFor("account-profile", v.Account.Callsign().Call), Icon: IconAttrs{Name: "file-lines"}},
	}
}

templ (v Account) Profile() {
	@Page(v.Nav()) {
		<div class="grid-container left-split main-content">
			<div class="profile-sidebar">
				<div class="profile-card">
					@Image(ImageAttrs{
            URL: GravatarURL(ctx, v.Account, 250),
            Width: 250,
            Height: 250,
            Extra: templ.Attributes{
                "class": "avatar",
            },
          })
					<h1 class="account-name">{ v.Account.Name }</h1>
					<h2 class="callsign">{ v.Account.Callsign().Call }</h2>
					@Can("edit", v.Account) {
						if CurrentAccount(ctx) != v.Account {
							<a href={ templ.URL(named.URLFor("delegated-settings", strings.ToLower(v.Account.Slug), "profile")) } class="button">
								Edit { v.Account.Kind.String() }
							</a>
						} else {
							<a href={ templ.URL(named.URLFor("settings", "profile")) } class="button">
								Edit profile
							</a>
						}
					}
					<ul>
						<li>
							@Icon(IconAttrs{Name: "at", FixedWidth: true})
							ryan@faerman.net
						</li>
						@Can("view-location", v.Account) {
							<li>
								@Icon(IconAttrs{Name: "location-dot", FixedWidth: true})
								{ StateAbbreviationToName(v.Account.Callsign().State) }, { v.Account.Callsign().Country }
							</li>
						}
						<li>
							@Icon(IconAttrs{Name: "id-card", FixedWidth: true})
							Technician
						</li>
					</ul>
				</div>
				<!--
				<div class="section clubs">
					<h3>Clubs</h3>
				</div>
				<div class="section organizations">
					<h3>Organizations</h3>
				</div>
        -->
			</div>
			<div class="profile-contents">
				if v.Account.About != "" {
					<h3>Profile</h3>
					<div class="profile-section profile-intro markdown-body">
						@templ.Raw(v.Account.About)
					</div>
				} else {
					<p>We'd love to tell you more about { v.Account.Name }, but they haven't shared anything.</p>
				}
				@Can("view-activity-graph", v.Account) {
					@ActivityGraph()
				}
			</div>
		</div>
	}
}

templ (v Account) MembershipContext(kind models.AccountKind) {
	<a href={ templ.URL(named.URLFor("group-new", kind.String())) } class="button">
		Create a { kind.String() }
	</a>
}

package views

import "github.com/go-chi/chi"
import "github.com/ryanfaerman/netctl/web/named"

type MenuItem struct {
	Value string
	URL   string

	Icon IconAttrs

	Attrs templ.Attributes

	Section     string
	IsSeparator bool
}

var MenuSeparator = MenuItem{
	IsSeparator: true,
}

func currentURL(ctx context.Context) string {
	c := chi.RouteContext(ctx)
	n := named.Lookup(c.RoutePattern())
	if n == "" {
		return ""
	}
	return named.URLFor(named.Lookup(c.RoutePattern()), c.URLParams.Values...)
}

func isCurrentURL(ctx context.Context, URL string) bool {
	return currentURL(ctx) == URL
}

templ (v MenuItem) Item() {
	<li>
		<a
			if v.URL != "" && v.URL != "#" {
				class={ templ.KV("active", isCurrentURL(ctx, v.URL)) }
				href={ templ.URL(v.URL) }
			} else {
				href="#"
			}
			{ v.Attrs... }
		>
			if !v.Icon.IsZeroValue() {
				@Icon(v.Icon)
			}
			if v.Value != "" {
				{ v.Value }
			}
		</a>
	</li>
}

type Menu []MenuItem

func (v Menu) ForSection(section string) Menu {
	var output Menu
	for _, item := range v {
		if item.Section == "" {
			item.Section = "left"

		}
		if item.Section == section {
			output = append(output, item)
		}
	}
	return output
}

type Navigation struct {
	LeftNav  []MenuItem
	RightNav []MenuItem
}

templ (m Menu) NewAppBar() {
	<header class="app-header">
		<div class="local-bar">
			<nav>
				<ul>
					<li class="app-name">
						<a href="/">
							@IconSolid("tower-cell")
							Net Control
						</a>
					</li>
					for _, item := range m.ForSection("left") {
						@item.Item()
					}
				</ul>
			</nav>
			<nav>
				<ul>
					for _, item := range m.ForSection("right") {
						@item.Item()
					}
					<li>
						<a
							class="tab"
							hx-get={ named.URLFor("slide-over-show") }
							hx-target="#slide-over-target"
							hx-swap="outerHTML"
						>
							@IconSolid("user")
							Account
						</a>
					</li>
				</ul>
			</nav>
		</div>
	</header>
	@SlideOverTarget()
}

templ SlideOverTarget() {
	<div id="slide-over-target"></div>
}

templ SlideOver() {
	<div id="slide-over-target">
		<div
			class="slide-overlay"
			hx-get={ named.URLFor("slide-over-hide") }
			hx-target="#slide-over-target"
			hx-swap="outerHTML"
		></div>
		<div class="slide-over" data-slide-from="right">
			<header>
				<span class="title name">Ryan Faerman</span>
				<span class="subtitle callsign">KQ4JXI</span>
				<a
					class="close"
					hx-get={ named.URLFor("slide-over-hide") }
					hx-target="#slide-over-target"
					hx-swap="outerHTML"
				>
					@IconSolid("xmark")
				</a>
			</header>
			<div class="content">
				<ul>
					<li>
						<a href={ templ.URL(named.URLFor("account-profile-self")) }>
							@IconSolid("user")
							Your Profile
						</a>
					</li>
				</ul>
				<ul>
					<li>
						<a href="#">
							@IconSolid("book")
							Your Logbooks
						</a>
					</li>
					<li>
						<a href="#">
							@IconSolid("users-rectangle")
							Your Nets
						</a>
					</li>
					<li>
						<a href="#">
							@IconSolid("people-group")
							Your Clubs
						</a>
					</li>
					<li>
						<a href="#">
							@IconSolid("sliders")
							Settings
						</a>
					</li>
				</ul>
				<ul>
					<li>
						<a href="#">
							@IconSolid("book-open")
							Net Control Docs
						</a>
					</li>
					<li>
						<a href="#">
							@IconSolid("clipboard-question")
							Net Control Support
						</a>
					</li>
				</ul>
				<ul>
					<li>
						<a href="#">
							@IconSolid("sign-out")
							Sign Out
						</a>
					</li>
				</ul>
			</div>
		</div>
	</div>
}

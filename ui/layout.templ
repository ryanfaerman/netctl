package ui

import "strconv"

templ Layout() {
	<!DOCTYPE html>
	<html>
		<head>
			<title>NetControl</title>
			<meta charset="utf-8"/>
			<meta name="description" content=""/>
			<meta name="author" content=""/>
			<link rel="stylesheet" href="/static/normalize.css"/>
			<link rel="stylesheet" href="/static/barebones.css"/>
			<link rel="stylesheet" href="/static/custom.css"/>
		</head>
		<body>
			<div id="htmx-alert" class="alert alert-warning sticky-top" hidden></div>
			<div id="main" class="container">
				<!-- @logo() -->
				{ children... }
			</div>
			<script src="/static/htmx.min.js"></script>
			<script src="/static/idiomorph-ext.min.js"></script>
			<script src="/static/custom.js"></script>
		</body>
	</html>
}

templ NetSession() {
	@Layout() {
		@checkForm(CheckinErrors{})
		<main id="checkin-records" hx-ext="morph" hx-sse="connect:/net/sse?stream=messages swap:message" hx-swap="morph:innerHTML">
			@netrecord(records)
		</main>
	}
}

templ logo() {
	<object data="/static/logo.svg" type="image/svg+xml"></object>
}

type Record struct {
	Role     string
	Traffic  int
	Callsign string `validate:"required,alphanum,min=3,max=6"`
	Name     string `json:"name" validate:"required,alpha"`
	Location string
	TimeIn   string
	Status   string
}

type CheckinErrors struct {
	Callsign string
	Name     string
}

templ checkForm(errors CheckinErrors) {
	<form id="check-in-form" class="check-in" action="/net/checkin" method="post" hx-post="/net/checkin" hx-swap="morph:innerHTML" hx-swap-oob="true">
		<input type="hidden" name="csrf_token" value={ csrf_token(ctx) }/>
		<div class="grid-container quarters">
			<div class={ "input-group", templ.KV("error", len(errors.Callsign) > 0) }>
				<!-- Station -->
				<label for="callsign">Callsign</label>
				<input type="text" id="callsign" name="callsign" class="u-full-width" placeholder="W1AW" autofocus/>
				if len(errors.Callsign) > 0 {
					<div class="error-message">{ errors.Callsign }</div>
				}
			</div>
			<div class={ "input-group", templ.KV("error", len(errors.Name) > 0) }>
				<!-- Name -->
				<label for="name">Name</label>
				<input type="text" id="name" name="name" class="u-full-width" placeholder="Ryan"/>
				if len(errors.Name) > 0 {
					<div class="error-message">{ errors.Name }</div>
				}
			</div>
			<div class="input-group">
				<!-- Kind -->
				<label for="kind">Kind</label>
				<select id="kind" name="kind" class="u-full-width">
					<option value="Routine">Routine</option>
					<option value="Welfare">Welfare</option>
					<option value="Priority">Priority</option>
					<option value="Emergency">Emergency</option>
					<option value="Traffic">Traffic</option>
					<option value="Question">Question</option>
					<option value="Announcement">Announcement</option>
					<option value="Comment">Comment</option>
				</select>
			</div>
			<div>
				<input class="button-primary u-full-width" type="submit" value="Submit"/>
			</div>
		</div>
	</form>
}

templ netrecord(records []Record) {
	<table class="u-full-width">
		<thead>
			<tr>
				<th class="center">#</th>
				<th>Role</th>
				<th>Traffic</th>
				<th>Callsign</th>
				<th>Name</th>
				<th>Location</th>
				<th>Time In</th>
				<th>Status</th>
			</tr>
		</thead>
		<tbody>
			for i, r := range records {
				<tr class={ templ.KV("role-control", r.Role == "NCS") }>
					<td class="center">{ strconv.Itoa(i+1) }</td>
					<td>{ r.Role }</td>
					<td>{ strconv.Itoa(r.Traffic) }</td>
					<td>{ r.Callsign }</td>
					<td>{ r.Name }</td>
					<td>{ r.Location }</td>
					<td>{ r.TimeIn }</td>
					<td>{ r.Status }</td>
				</tr>
			}
		</tbody>
	</table>
}
